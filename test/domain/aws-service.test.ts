// import { constant } from 'jsii/lib/case';

import { strict as assert } from 'assert';
import { AwsService } from '../../lib';

describe('Service', function() {
  describe('namespace and JS', function() {
    it('Print matches of namespace and JS', function() {
      const jsNames = ['AccessAnalyzer', 'Account', 'ACM', 'ACMPCA', 'AlexaForBusiness', 'Amp', 'Amplify', 'AmplifyBackend', 'AmplifyUIBuilder', 'APIGateway', 'ApiGatewayManagementApi', 'ApiGatewayV2', 'AppConfig', 'AppConfigData', 'Appflow', 'AppIntegrations', 'ApplicationAutoScaling', 'ApplicationCostProfiler', 'ApplicationInsights', 'AppMesh', 'AppRunner', 'AppStream', 'AppSync', 'Athena', 'AuditManager', 'AugmentedAIRuntime', 'AutoScaling', 'AutoScalingPlans', 'Backup', 'BackupGateway', 'BackupStorage', 'Batch', 'Billingconductor', 'Braket', 'Budgets', 'Chime', 'ChimeSDKIdentity', 'ChimeSDKMediaPipelines', 'ChimeSDKMeetings', 'ChimeSDKMessaging', 'Cloud9', 'CloudControl', 'CloudDirectory', 'CloudFormation', 'CloudFront', 'CloudHSM', 'CloudHSMV2', 'CloudSearch', 'CloudSearchDomain', 'CloudTrail', 'CloudWatch', 'CloudWatchEvents', 'CloudWatchLogs', 'CodeArtifact', 'CodeBuild', 'CodeCommit', 'CodeDeploy', 'CodeGuruProfiler', 'CodeGuruReviewer', 'CodePipeline', 'CodeStar', 'CodeStarconnections', 'CodeStarNotifications', 'CognitoIdentity', 'CognitoIdentityServiceProvider', 'CognitoSync', 'Comprehend', 'ComprehendMedical', 'ComputeOptimizer', 'ConfigService', 'Connect', 'ConnectCampaigns', 'ConnectCases', 'ConnectContactLens', 'ConnectParticipant', 'ControlTower', 'CostExplorer', 'CUR', 'CustomerProfiles', 'DataBrew', 'DataExchange', 'DataPipeline', 'DataSync', 'DAX', 'Detective', 'DeviceFarm', 'DevOpsGuru', 'DirectConnect', 'DirectoryService', 'Discovery', 'DLM', 'DMS', 'DocDB', 'Drs', 'DynamoDB', 'DynamoDBStreams', 'EBS', 'EC2', 'EC2InstanceConnect', 'ECR', 'ECRPUBLIC', 'ECS', 'EFS', 'EKS', 'ElastiCache', 'ElasticBeanstalk', 'ElasticInference', 'ElasticTranscoder', 'ELB', 'ELBv2', 'EMR', 'EMRcontainers', 'EMRServerless', 'ES', 'EventBridge', 'Evidently', 'Finspace', 'Finspacedata', 'Firehose', 'Fis', 'FMS', 'ForecastQueryService', 'ForecastService', 'FraudDetector', 'FSx', 'GameLift', 'GameSparks', 'Glacier', 'GlobalAccelerator', 'Glue', 'Grafana', 'Greengrass', 'GreengrassV2', 'GroundStation', 'GuardDuty', 'Health', 'HealthLake', 'Honeycode', 'IAM', 'IdentityStore', 'Imagebuilder', 'ImportExport', 'Inspector', 'Inspector2', 'Iot', 'IoT1ClickDevicesService', 'IoT1ClickProjects', 'IoTAnalytics', 'IotData', 'IotDeviceAdvisor', 'IoTEvents', 'IoTEventsData', 'IoTFleetHub', 'IoTFleetWise', 'IoTJobsDataPlane', 'IoTSecureTunneling', 'IoTSiteWise', 'IoTThingsGraph', 'IoTTwinMaker', 'IoTWireless', 'IVS', 'Ivschat', 'Kafka', 'KafkaConnect', 'Kendra', 'Keyspaces', 'Kinesis', 'KinesisAnalytics', 'KinesisAnalyticsV2', 'KinesisVideo', 'KinesisVideoArchivedMedia', 'KinesisVideoMedia', 'KinesisVideoSignalingChannels', 'KMS', 'LakeFormation', 'Lambda', 'LexModelBuildingService', 'LexModelsV2', 'LexRuntime', 'LexRuntimeV2', 'LicenseManager', 'LicenseManagerUserSubscriptions', 'Lightsail', 'Location', 'LookoutEquipment', 'LookoutMetrics', 'LookoutVision', 'M2', 'MachineLearning', 'Macie', 'Macie2', 'ManagedBlockchain', 'MarketplaceCatalog', 'MarketplaceCommerceAnalytics', 'MarketplaceEntitlementService', 'MarketplaceMetering', 'MediaConnect', 'MediaConvert', 'MediaLive', 'MediaPackage', 'MediaPackageVod', 'MediaStore', 'MediaStoreData', 'MediaTailor', 'MemoryDB', 'Mgn', 'MigrationHub', 'MigrationHubConfig', 'MigrationHubOrchestrator', 'MigrationHubRefactorSpaces', 'MigrationHubStrategy', 'Mobile', 'MobileAnalytics', 'MQ', 'MTurk', 'MWAA', 'Neptune', 'NetworkFirewall', 'NetworkManager', 'Nimble', 'OpenSearch', 'OpsWorks', 'OpsWorksCM', 'Organizations', 'Outposts', 'Panorama', 'Personalize', 'PersonalizeEvents', 'PersonalizeRuntime', 'PI', 'Pinpoint', 'PinpointEmail', 'PinpointSMSVoice', 'PinpointSMSVoiceV2', 'Polly', 'Pricing', 'PrivateNetworks', 'Proton', 'QLDB', 'QLDBSession', 'QuickSight', 'RAM', 'Rbin', 'RDS', 'RDSDataService', 'Redshift', 'RedshiftData', 'RedshiftServerless', 'Rekognition', 'Resiliencehub', 'ResourceExplorer2', 'ResourceGroups', 'ResourceGroupsTaggingAPI', 'RoboMaker', 'RolesAnywhere', 'Route53', 'Route53Domains', 'Route53RecoveryCluster', 'Route53RecoveryControlConfig', 'Route53RecoveryReadiness', 'Route53Resolver', 'RUM', 'S3', 'S3Control', 'S3Outposts', 'SageMaker', 'SagemakerEdge', 'SageMakerFeatureStoreRuntime', 'SageMakerRuntime', 'SavingsPlans', 'Scheduler', 'Schemas', 'SecretsManager', 'SecurityHub', 'ServerlessApplicationRepository', 'ServiceCatalog', 'ServiceCatalogAppRegistry', 'ServiceDiscovery', 'ServiceQuotas', 'SES', 'SESV2', 'Shield', 'Signer', 'SimpleDB', 'SMS', 'Snowball', 'SnowDeviceManagement', 'SNS', 'SQS', 'SSM', 'SSMContacts', 'SSMIncidents', 'SSO', 'SSOAdmin', 'SSOOIDC', 'StepFunctions', 'StorageGateway', 'STS', 'Support', 'SupportApp', 'SWF', 'Synthetics', 'Textract', 'TimestreamQuery', 'TimestreamWrite', 'TranscribeService', 'Transfer', 'Translate', 'VoiceID', 'WAF', 'WAFRegional', 'WAFV2', 'WellArchitected', 'Wisdom', 'WorkDocs', 'WorkLink', 'WorkMail', 'WorkMailMessageFlow', 'WorkSpaces', 'WorkSpacesWeb', 'XRay'];
      const namespaces = ['accessanalyzer', 'account', 'acm', 'acm-pca', 'alexaforbusiness', 'amp', 'amplify', 'amplifybackend', 'amplifyuibuilder', 'apigateway', 'apigatewaymanagementapi', 'apigatewayv2', 'appconfig', 'appconfigdata', 'appflow', 'appintegrations', 'application-autoscaling', 'application-insights', 'applicationcostprofiler', 'appmesh', 'apprunner', 'appstream', 'appsync', 'athena', 'auditmanager', 'autoscaling', 'autoscaling-plans', 'backup', 'backup-gateway', 'backupstorage', 'batch', 'billingconductor', 'braket', 'budgets', 'ce', 'chime', 'chime-sdk-identity', 'chime-sdk-media-pipelines', 'chime-sdk-meetings', 'chime-sdk-messaging', 'cloud9', 'cloudcontrol', 'clouddirectory', 'cloudformation', 'cloudfront', 'cloudhsm', 'cloudhsmv2', 'cloudsearch', 'cloudsearchdomain', 'cloudtrail', 'cloudwatch', 'codeartifact', 'codebuild', 'codecommit', 'codedeploy', 'codeguru-reviewer', 'codeguruprofiler', 'codepipeline', 'codestar', 'codestar-connections', 'codestar-notifications', 'cognito-identity', 'cognito-idp', 'cognito-sync', 'comprehend', 'comprehendmedical', 'compute-optimizer', 'config', 'connect', 'connect-contact-lens', 'connectcampaigns', 'connectcases', 'connectparticipant', 'controltower', 'cur', 'customer-profiles', 'databrew', 'dataexchange', 'datapipeline', 'datasync', 'dax', 'detective', 'devicefarm', 'devops-guru', 'directconnect', 'discovery', 'dlm', 'dms', 'docdb', 'drs', 'ds', 'dynamodb', 'dynamodbstreams', 'ebs', 'ec2', 'ec2-instance-connect', 'ecr', 'ecr-public', 'ecs', 'efs', 'eks', 'elastic-inference', 'elasticache', 'elasticbeanstalk', 'elastictranscoder', 'elb', 'elbv2', 'emr', 'emr-containers', 'emr-serverless', 'es', 'events', 'evidently', 'finspace', 'finspace-data', 'firehose', 'fis', 'fms', 'forecast', 'forecastquery', 'frauddetector', 'fsx', 'gamelift', 'gamesparks', 'glacier', 'globalaccelerator', 'glue', 'grafana', 'greengrass', 'greengrassv2', 'groundstation', 'guardduty', 'health', 'healthlake', 'honeycode', 'iam', 'identitystore', 'imagebuilder', 'importexport', 'inspector', 'inspector2', 'iot', 'iot-data', 'iot-jobs-data', 'iot1click-devices', 'iot1click-projects', 'iotanalytics', 'iotdeviceadvisor', 'iotevents', 'iotevents-data', 'iotfleethub', 'iotfleetwise', 'iotsecuretunneling', 'iotsitewise', 'iotthingsgraph', 'iottwinmaker', 'iotwireless', 'ivs', 'ivschat', 'kafka', 'kafkaconnect', 'kendra', 'keyspaces', 'kinesis', 'kinesis-video-archived-media', 'kinesis-video-media', 'kinesis-video-signaling', 'kinesisanalytics', 'kinesisanalyticsv2', 'kinesisvideo', 'kms', 'lakeformation', 'lambda', 'lex-models', 'lex-runtime', 'lexv2-models', 'lexv2-runtime', 'license-manager', 'license-manager-user-subscriptions', 'lightsail', 'location', 'logs', 'lookoutequipment', 'lookoutmetrics', 'lookoutvision', 'm2', 'machinelearning', 'macie', 'macie2', 'managedblockchain', 'marketplace-catalog', 'marketplace-entitlement', 'marketplacecommerceanalytics', 'mediaconnect', 'mediaconvert', 'medialive', 'mediapackage', 'mediapackage-vod', 'mediastore', 'mediastore-data', 'mediatailor', 'memorydb', 'meteringmarketplace', 'mgh', 'mgn', 'migration-hub-refactor-spaces', 'migrationhub-config', 'migrationhuborchestrator', 'migrationhubstrategy', 'minerva', 'mobile', 'mq', 'mturk', 'mwaa', 'neptune', 'network-firewall', 'networkmanager', 'nimble', 'opensearch', 'opsworks', 'opsworkscm', 'organizations', 'outposts', 'panorama', 'personalize', 'personalize-events', 'personalize-runtime', 'pi', 'pinpoint', 'pinpoint-email', 'pinpoint-sms-voice', 'pinpoint-sms-voice-v2', 'polly', 'pricing', 'privatenetworks', 'proton', 'qldb', 'qldb-session', 'quicksight', 'ram', 'rbin', 'rds', 'rds-data', 'redshift', 'redshift-data', 'redshift-serverless', 'rekognition', 'resiliencehub', 'resource-explorer-2', 'resource-groups', 'resourcegroupstaggingapi', 'robomaker', 'rolesanywhere', 'route53', 'route53-recovery-cluster', 'route53-recovery-control-config', 'route53-recovery-readiness', 'route53domains', 'route53resolver', 'rum', 's3', 's3control', 's3outposts', 'sagemaker', 'sagemaker-a2i-runtime', 'sagemaker-edge', 'sagemaker-featurestore-runtime', 'sagemaker-runtime', 'savingsplans', 'scheduler', 'schemas', 'sdb', 'secretsmanager', 'securityhub', 'serverlessrepo', 'service-quotas', 'servicecatalog', 'servicecatalog-appregistry', 'servicediscovery', 'ses', 'sesv2', 'shield', 'signer', 'sms', 'sms-voice', 'snow-device-management', 'snowball', 'sns', 'sqs', 'ssm', 'ssm-contacts', 'ssm-incidents', 'sso', 'sso-admin', 'sso-oidc', 'stepfunctions', 'storagegateway', 'sts', 'support', 'support-app', 'swf', 'synthetics', 'textract', 'timestream-query', 'timestream-write', 'transcribe', 'transfer', 'translate', 'voice-id', 'waf', 'waf-regional', 'wafv2', 'wellarchitected', 'wisdom', 'workdocs', 'worklink', 'workmail', 'workmailmessageflow', 'workspaces', 'workspaces-web', 'xray'];
      const matches: string[][] = [];
      jsNames.forEach(js => namespaces.forEach(namespace => {
        if (js.toLowerCase().replace(/\W/g, '') == namespace.toLowerCase().replace(/\W/g, '')) {
          matches.push([js, namespace]);
        }
      }));
      const found = matches.map(a => a[0]);
      const missing = jsNames.filter(item => found.indexOf(item) < 0);
      assert.equal(missing.length, 24);

      //matches.forEach(match => console.log(`  static readonly ${constant(match[0])}: Service = new Service(\'${match[1]}\', \'${match[0]}\');`));
    });
  });
  describe('constructor', function() {
    it('Print matches of namespace and JS', function() {
      assert.equal(AwsService.S3.namespace, 's3');
      assert.equal(AwsService.S3.javaScriptName, 'S3');
    });
  });
});
